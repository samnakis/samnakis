Sam Nakis
Algorithm - Assignment 5


Problem:
Collect data from a file and have the program calculate the percentage and letter grade that person is earning in class.


Input:
The user will input the name of the file they want to read numbers in from as well as the name of the file they want to save to.


Output:
The program will send the percentage and letter grade out to a file.


Step-by-Step Solution:
1. Before the main part of the program, include iostream, string, and fstream
2. Declare a character for “letter”
3. Create the function declaration for calculating the letter grade
4. Declare two variables as doubles, score and num, and initialize to 0
5. Declare a character for “letterGrade”
6. Create four strings for each of the grade categories in the file
7. Create strings for input and output files
8. Print out a welcome message
9. Skip two lines
10. Prompt the user to enter the file they wish to open
11. Allow the user to input a file name (grades.txt)
12. Skip a line
13. Declare four variables as doubles for assignment, participation, midterm, and final scores and initialize to 0
14. Open the input stream
15. Start an if statement for if the file is open
16. Input the name “assignments” and the number, 6, into the program
17. Declare a variable as a double for value and initialize to 0
18. Create a for loop for reading in all of the assignment grades
19. Take the assignment score and divide it by 6 to get the average
20. Multiply the assignment score by 0.5 to account for 50% of the class grade
21. Input the name “participation” and the number, 1, into the program
22. Multiply the participation score by 0.1 to account for 10% of the class grade
23. Input the name “midterm” and the number, 1, into the program
24. Multiply the midterm score by 0.2 to account for 20% of the class grade
25. Input the name “final” and the number, 1, into the program
26. Multiply the final score by 0.2 to account for 20% of the class grade
27. Add up all of the individual scores to get the total score of the class
28. End the if statement and have an else statement saying that it was unable to open the file
29. Close the input stream
30. Run the function to calculate the letter grade
31. Print out a statement saying it’s reading from the file that the user entered
32. Skip two lines
33. Print out a statement saying that it’s calculating grades
34. Skip two lines
35. Print out a statement which prompts the user to enter the name of the file they want to save to
36. Have the user input a file name for the output file
37. Skip a line
38. Open the output stream
39. Open the file that the user suggested as the output file
40. Have the score followed by the letter grade printed into the file
41. Print out a message saying the score and letter grade were written into the file
42. Skip two lines
43. Print out a message saying thank you for using the program
44. Skip a line
45. Close the output stream
46. After the main part of the program, create the function definition using normal grading scales and if, elseif, and else statements