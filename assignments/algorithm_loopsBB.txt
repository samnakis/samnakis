Sam Nakis
Algorithm - Assignment 3


Problem:
        Creating a menu with food options that users can order from.


Input:
The user will input which items from the menu they want as well as the how much cash they are paying.


Output:
The program will output which items and how much of each they ordered as well as the total price of what the user ordered.


Step-by-Step Solution:
1. Include iomanip
2. Display welcome message
3. Skip lines
4. Declare variables as integers for selection, each of the food items (hamburger, cheeseburger, fries, drink, and cake), and a food total
5. Declare a double variable for the cost total
6. Initialize all of the variables to 0
7. Create a do-while loop for the ordering process
8. Display a message asking the user what they want to order
9. Skip lines
10. List the menu items and prices along with an option to complete the order
11. Skip a line between each option
12. Prompt the user to enter their selection
13. Collect input from the user as the number of the menu item they chose
14. Create if, else if, and else statements for each of the food items
   1. If the user selected this food item, then
      1. Display a message saying they selected the food item that corresponds with the number from the menu
      2. Skip lines
      3. Add the price of that to the total
      4. Use an increment operator to add to the total number of that food item
      5. Use an increment operator to add to the number of total food count
   1. If the user selected to complete their order, then
      1. Display a message saying the user selected to complete their order
      2. Skip lines
   1. Else (the option is not a number 1-6)
      1. Display a message saying the user input an invalid selection
      2. Skip lines
1. Have the do-while loop loop again if the selection is not equal to 6 (complete order option)
2. Create a while loop while the total food count is over 0
3. Create if and else if statements for each of the food items
   1. If the count for a specific food item is over 0, then
      1. Display a message saying you have ordered x amount of the food item
      2. Skip line
      3. Subtract the food item from the food total
      4. Set the food item equal to 0
1. End the while loop
2. Add tax to the total by multiplying the total by 1.07
3. Add std::fixed
4. Add std::setprecision(2) to make the money values only go to two decimal places
5. Skip line
6. Display a message saying what the total is
7. Skip lines
8. Declare variables as doubles for money and change
9. Initialize both variables to 0
10. Display a message which prompts the user to enter the amount tendered
11. Collect input from the user for how much money they’re paying
12. Skip line
13. Create a while loop for if the money the user entered is less than the cost total
14. Display a message telling the user they did not enter enough money
15. Skip line
16. Prompt the user to enter an amount greater than or equal to the total
17. Skip lines
18. Display a message which prompts the user to enter the amount tendered
19. Collect input from the user for how much money they’re paying
20. End the while loop
21. Set change equal to the money the user entered minus the total cost
22. Skip line
23. Display a message telling the user how much change they get
24. Skip lines
25. Display a message telling the user thanks and enjoy their meal
26. Skip line